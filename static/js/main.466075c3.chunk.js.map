{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.js","API/index.js","components/Chart/Chart.js","components/CountryPicker/CountryPicker.js","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","CircularProgress","size","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","console","log","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","fill","borderColor","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","setCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","App","state","fetchedData","setState","this","image","src","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.466075c3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__sC14B\",\"card\":\"Cards_card__kL1jq\",\"infected\":\"Cards_infected__1FplZ\",\"recovered\":\"Cards_recovered__1D4ox\",\"deaths\":\"Cards_deaths__36qL0\"};","import React from 'react';\r\nimport {Card,CardContent,Typography,Grid, CircularProgress} from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\nimport styles from './Cards.module.css'\r\n\r\nfunction Cards({data:{confirmed,recovered,deaths,lastUpdate}}) {\r\n\r\n    if(!confirmed){\r\n        return <CircularProgress size={100}></CircularProgress>\r\n    }\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom> Infected </Typography>\r\n                        <Typography variant=\"h5\"> \r\n                            <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\"/>\r\n                        </Typography>     \r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                    </CardContent> \r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom> Recovered </Typography>\r\n                        <Typography variant=\"h5\"> \r\n                            <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\"/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n                    </CardContent> \r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom> Deaths </Typography>\r\n                        <Typography variant=\"h5\"> \r\n                            <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\"/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\r\n                    </CardContent> \r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;\r\n","import axios from 'axios';\r\n\r\nconst url=\"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData= async (country)=>{\r\n\r\n    let changeableUrl= url;\r\n    if(country){\r\n        changeableUrl=`${url}/countries/${country}`;\r\n    }\r\n\r\n    try{\r\n        const {data:{confirmed,recovered,deaths,lastUpdate}}=await axios.get(changeableUrl);\r\n    \r\n        return { confirmed, recovered, deaths, lastUpdate};\r\n\r\n    }catch(error){\r\n\r\n    }\r\n}\r\n\r\nexport const fetchDailyData= async ()=>{\r\n    try {\r\n        //La respuesta de axios siempre la trae en un key : data\r\n        const {data}= await axios.get(`${url}/daily`);\r\n        \r\n        const modifiedData=data.map(dailyData=>(\r\n            {\r\n                confirmed:dailyData.confirmed.total,\r\n                deaths:dailyData.deaths.total,\r\n                date:dailyData.reportDate\r\n            }\r\n        ))\r\n        return modifiedData;\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const fetchCountries= async ()=>{\r\n    try {\r\n        const {data: {countries}}= await axios.get(`${url}/countries`);\r\n\r\n        return countries.map(country=>country.name)\r\n        \r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport {fetchDailyData} from '../../API';\r\nimport {Line,Bar} from 'react-chartjs-2'\r\n\r\nimport styles from './Chart.module.css';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nfunction Chart({data:{confirmed,recovered,deaths},country}) {\r\n\r\n    const [dailyData,setDailyData]=useState([]);\r\n\r\n    useEffect(()=>{\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        };\r\n        fetchAPI();\r\n    },[]);\r\n    const lineChart=(\r\n        dailyData.length ?\r\n        (\r\n            <Line data={{\r\n                labels:dailyData.map(({date}) => date),\r\n                datasets:[\r\n                    {\r\n                        label:\"Infected\",\r\n                        data:dailyData.map(({confirmed})=>confirmed),\r\n                        fill:true,\r\n                        borderColor:\"#3333ff\"                \r\n                    },\r\n                    {\r\n                        label:\"Deaths\",\r\n                        data:dailyData.map(({deaths})=>deaths),\r\n                        fill:true,\r\n                        borderColor:\"red\" ,\r\n                        backgroundColor:\"rgba(255,0,0,0.5)\"\r\n                    }\r\n                ]\r\n            }}/>\r\n        ) : <CircularProgress size={100}/>\r\n\r\n    );\r\n    const barChart=(\r\n        confirmed ? (\r\n            <Bar\r\n                data={{\r\n                    labels:[\"Infected\",\"Recovered\",\"Deaths\"],\r\n                    datasets:[{\r\n                        label:\"People\",\r\n                        backgroundColor:[\r\n                            \"rgba(0,0,255,0.5)\",\r\n                            \"rgba(0,255,0,0.5)\",\r\n                            \"rgba(255,0,0,0.5)\"\r\n                        ], //Para cada uno\r\n                        data:[confirmed.value,recovered.value,deaths.value]\r\n\r\n                    }]\r\n                }}\r\n                options={{\r\n                    legend:{display:false},\r\n                    title:{display : true,text: `Current state in ${country}`}\r\n                }}\r\n            >\r\n                \r\n            </Bar>\r\n        ) : <CircularProgress size=\"100\"/>\r\n    )\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;\r\n","import React,{useState,useEffect} from 'react';\r\nimport {NativeSelect,FormControl} from '@material-ui/core';\r\n\r\nimport {fetchCountries} from '../../API';\r\n\r\nimport styles from './CountryPicker.module.css'\r\n\r\nfunction CountryPicker({handleCountryChange}) {\r\n    const [countries,setCountries]=useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        const fetchAPI= async ()=>{\r\n            setCountries(await fetchCountries());\r\n        }\r\n        fetchAPI();\r\n    },[])\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e)=>handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {countries.map((country,i)=><option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;\r\n","import React from 'react';\r\n\r\n\r\nimport {Cards,Chart,CountryPicker} from './components'\r\nimport styles from './App.module.css';\r\nimport {fetchData} from './API';\r\n\r\n \r\nclass App extends React.Component{\r\n\r\n    state={\r\n        data:{},\r\n        country:\"\"\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const fetchedData=await fetchData();\r\n        this.setState({data:fetchedData})\r\n    }\r\n\r\n    handleCountryChange = async (country)=>{\r\n        const fetchedData=await fetchData(country);\r\n        this.setState({data:fetchedData , country: country})\r\n    }\r\n\r\n    render(){\r\n        const {data,country}=this.state;\r\n        return(\r\n            <div className={styles.container}>\r\n                <img className={styles.image} src=\"https://i.ibb.co/7QpKsCX/image.png\" alt=\"COVID-19\"/>\r\n                <Cards data={data}/>\r\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n                <Chart data={data} country={country}/>     \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>,document.getElementById(\"root\"));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2Dmx5\",\"image\":\"App_image__ueau2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3t_LA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2kzjf\"};"],"sourceRoot":""}